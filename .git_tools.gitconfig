#
# To use these tools, include this file in your own gitconfig file:
#
#   [include]
#       path = PATH/TO/.git_tools/.gitconfig
#
# Then add the following line to your shell profile
# (.bashrc, .zshrc, etc) to make git-tools slightly more efficient:
#
#	[[ -z "$GIT_TOOLS_PATH" ]] && export GIT_TOOLS_PATH="$(dirname "$(git config --show-origin alias.xtool | cut -f1 | sed 's/^file://')")"
#

[alias]
    #
    # USAGE: git alias <name>
    #  print the indicated git alias
    alias = xtool alias
    #
    # USAGE: git aliases
    #  prints all of the aliases listed in the git config
    aliases = xtool alias --all
    #
    # USAGE: git clear-changes
    #  reset all changes back to the state of HEAD (most recent commit)
    clear-changes = reset --hard HEAD --
    #
    # USAGE: git ignore [--global] [path(s)]
    #  adds the specified path to the local .gitignore file
    #  if no path is specified, opens .gitignore in the default editor
    #     --global
    #       acts on the ~/.gitignore_global file instead
    ignore = xtool ignore
    #
    # USAGE: git graph
    graph = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%n' --all
    #
    # USAGE: git last
    #  show the details of the most recent commit
    last = show --abbrev-commit
    #
    # USAGE git log-tree [-q|-v] [-f] [-b <branch>] [-o out_folder]
    #  generates a directory containing files representing each commit log
    #  for the current (or specified) branch
    #     - PR/merge commit-log files contain the logs for all child commits of the "external" parent
    #     - commit-log files end with a cumulative diff for all commits contained in the file
    #     - by default, the current branch is chosen, and the output folder is named using the selected branch
    log-tree = xtool build_log_tree
    #
    # USAGE: git make-like <ref>
    #  pulls all files from the indicated ref (commit, branch, etc) into your current working tree
    #  and merges non-conflicting changes, without overwriting your working tree state
    make-like = xtool make-like
    #
    # USAGE: git nearby
    #  intended to list all git projects in the parent directory of the current project
    nearby = xtool nearby
    #
    # USAGE: git purge [filepath(s)]
    #  WARNING: THIS IS VERY DANGEROUS AND CANNOT BE UNDONE!
    #  remove the indicated file(s) from the working tree and scrub them entirely from the git history
    #     - all references to the removed files are scrubbed from the repo history
    #     - any commit which soley references the targeted file(s) is removed from the repo history
    #     - there is no way to undo this
    purge = xtool purge
    #
    # USAGE: git rollback [commit-ish] [n]
    #  undo the last (n) commits while preserving the working tree (defaults to undo the most recent commit)
    rollback = xtool rollback
    #
    # USAGE: git root
    #  prints the root directory 
    root = rev-parse --show-toplevel
    #
    # USAGE: git send ["message"]
    #  commit all tracked files with the indicated message and push to git
    send = xtool send
    #
    # USAGE: git status-diff [<options>] [<commit>] [--] [<path>â€¦]
    #  see colorized diff for changes in current working tree
    status-diff = xtool status-diff
    #
    # USAGE: git touch <filename>
    #  begin tracking the indicated files (creates an empty file if it does not exist)
    touch = xtool touch
    #
    # USAGE: git tree [--modified]
    #  print the directory tree from the root of the current git context
    #     -m, --modified
    #        only show files that have been modified since the last commit
    tree = xtool tree
    #
    # USAGE: git unstage <files>
    unstage = reset HEAD --
    #
    # USAGE: git untrack <files>
    untrack = rm -r --cached --quiet --
    #
    # USAGE: git xtool [--open|-o] <tool>
    #  execute the indicated tool, or open the tool file
    xtool = ! sh \"${GIT_TOOLS_PATH:-\"$(dirname \"$(git config --show-origin alias.xtool | cut -f1 | sed 's/^file://')\")\"}/xtool\"
    #
